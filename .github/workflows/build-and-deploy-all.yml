name: Build & Deploy All

on:
  workflow_dispatch:
    inputs:
      teamName:
        description: 'Team Name (IMPORTANT)'
        default: 'default-team'

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io

jobs:
  build_test_push_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      # ------------------------------------------------------
      # A) Build & Test the two .NET apps
      # ------------------------------------------------------      
      - name: Restore & Build Survey-App
        working-directory: src/Survey-App
        run: |
          dotnet restore
          dotnet build --no-restore --configuration Release

      - name: Run Survey-Tests
        working-directory: tests/Survey-Tests
        run: dotnet test --verbosity normal

      - name: Restore & Build Reporting-App
        working-directory: src/Reporting-App
        run: |
          dotnet restore
          dotnet build --no-restore --configuration Release

      - name: Run Reporting-Tests
        working-directory: tests/Reporting-Tests
        run: dotnet test --verbosity normal

      # ------------------------------------------------------
      # B) Lower-case owner & Log in to GHCR
      # ------------------------------------------------------
      - name: Lower-case the repo owner
        shell: bash
        run: echo "OWNER_LOWER=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # ------------------------------------------------------
      # C) Build & Push Docker images
      # ------------------------------------------------------
      - name: Build & Push Survey-App Image
        uses: docker/build-push-action@v6
        with:
          context: src/Survey-App
          file: src/Survey-App/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/survey-app-${{ github.event.inputs.teamName }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/survey-app-${{ github.event.inputs.teamName }}:${{ github.ref_name || github.head_ref }}
          build-args: |
            NUGET_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
            USERNAME=${{ github.actor }}

      - name: Build & Push Reporting-App Image
        uses: docker/build-push-action@v6
        with:
          context: src/Reporting-App
          file: src/Reporting-App/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/reporting-app-${{ github.event.inputs.teamName }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/reporting-app-${{ github.event.inputs.teamName }}:${{ github.ref_name || github.head_ref }}
          build-args: |
            NUGET_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
            USERNAME=${{ github.actor }}

      # ------------------------------------------------------
      # D) Azure Login & Deploy Container Apps via Bicep
      # ------------------------------------------------------
      - name: Azure Login (Service Principal)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      - name: Ensure team RG
        run: |
          az group create \
            --name rg-${{ github.event.inputs.teamName }}-apps \
            --location westeurope

      - name: Debug show workspace
        run: |
          pwd
          ls -R .

      - name: Deploy Container Apps
        run: |
          az deployment group create \
            --resource-group rg-${{ github.event.inputs.teamName }}-apps \
            --template-file ./infrastructure/main.bicep \
            --parameters \
              teamName=${{ github.event.inputs.teamName }} \
              sharedRgName=rg-test \
              containerEnvName=caenv-shared-westeurope \
              registryUsername=${{ github.actor }} \
              surveyImage=${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/survey-app-${{ github.event.inputs.teamName }}:${{ github.sha }} \
              reportingImage=${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/reporting-app-${{ github.event.inputs.teamName }}:${{ github.sha }} \
              containerAppSecrets='[{"name":"github-token","value":"'"${{ secrets.GHCR_PAT }}"'"}]'
